// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Draft renders correctly 1`] = `
<withRouter(Draft)
  nameGuest="Beastly Barbarossa"
  nameHost="Sneaky Saladin"
  nextAction={0}
  preset={
    Preset {
      "draftOptions": undefined,
      "encodedCivilisations": "7fffffffff",
      "name": "Default Preset",
      "presetId": undefined,
      "turns": Array [
        Turn {
          "action": "BAN",
          "exclusivity": "GLOBAL",
          "executingPlayer": "HOST",
          "hidden": false,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "HOST",
        },
        Turn {
          "action": "BAN",
          "exclusivity": "GLOBAL",
          "executingPlayer": "GUEST",
          "hidden": false,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "GUEST",
        },
        Turn {
          "action": "BAN",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "HOST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "HOST",
        },
        Turn {
          "action": "BAN",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "GUEST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "GUEST",
        },
        Turn {
          "action": "REVEAL_ALL",
          "exclusivity": "GLOBAL",
          "executingPlayer": "NONE",
          "hidden": false,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "NONE",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "GLOBAL",
          "executingPlayer": "HOST",
          "hidden": false,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "HOST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "GLOBAL",
          "executingPlayer": "GUEST",
          "hidden": false,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "GUEST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "EXCLUSIVE",
          "executingPlayer": "HOST",
          "hidden": false,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "HOST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "EXCLUSIVE",
          "executingPlayer": "GUEST",
          "hidden": false,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "GUEST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "HOST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "HOST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "GUEST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "GUEST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "HOST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "HOST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "GUEST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "GUEST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "HOST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "HOST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "GUEST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "GUEST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "HOST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "HOST",
        },
        Turn {
          "action": "PICK",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "GUEST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "GUEST",
        },
        Turn {
          "action": "REVEAL_ALL",
          "exclusivity": "GLOBAL",
          "executingPlayer": "NONE",
          "hidden": false,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "NONE",
        },
        Turn {
          "action": "SNIPE",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "HOST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "HOST",
        },
        Turn {
          "action": "SNIPE",
          "exclusivity": "NONEXCLUSIVE",
          "executingPlayer": "GUEST",
          "hidden": true,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "GUEST",
        },
        Turn {
          "action": "REVEAL_ALL",
          "exclusivity": "GLOBAL",
          "executingPlayer": "NONE",
          "hidden": false,
          "id": "mocked-uuid",
          "parallel": false,
          "player": "NONE",
        },
      ],
    }
  }
  t={[Function]}
  whoAmI="HOST"
/>
`;
